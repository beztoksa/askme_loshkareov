
services:
  db:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: 'my_database'
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"

  web:
    build: .
    command: gunicorn askme_loshkareov.wsgi:application --workers=1 --timeout=120 --bind=0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - django_cache:/var/tmp/django_cache
    depends_on:
      - db
    environment:
      DB_NAME: my_database
      DB_USER: root
      DB_PASSWORD: pass
      DB_HOST: db
  wsgi-test:
    build: .
    command: gunicorn wsgi_apps.simple_wsgi:app --bind 0.0.0.0:8081
    ports:
      - "8081:8081"
    volumes:
      - .:/app
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "8010:8010"
    volumes:
      - ./nginx/logs:/var/log/nginx
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      #- ./nginx/cache:/var/cache/nginx
      - ./static:/static
      - ./uploads:/uploads
    depends_on:
      - web
  centrifugo:
      image: centrifugo/centrifugo:latest
      restart: always
      volumes:
        - ./centrifugo/config.json:/centrifugo/config.json:ro
      command: centrifugo --config=/centrifugo/config.json
      expose:
        - "8000"
  cron:
    build: .
    container_name: django-cron
    command: cron -f
    volumes:
      - .:/app
      - django_cache:/var/tmp/django_cache
    depends_on:
      - db
volumes:
  django_cache: